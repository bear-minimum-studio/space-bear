[gd_resource type="VisualShader" load_steps=25 format=3 uid="uid://cx6fcps1uqqqu"]

[sub_resource type="VisualShaderNodeRandomRange" id="VisualShaderNodeRandomRange_vp0qo"]
default_input_values = [0, Vector3(1, 1, 1), 1, -1.0, 2, 1.0]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_2nttx"]
parameter_name = "Width"
hint = 1
min = 0.01
max = 0.2
default_value_enabled = true
default_value = 0.05

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_svfty"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_87ceb"]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_mw8qi"]
operator = 2

[sub_resource type="VisualShaderNodeRandomRange" id="VisualShaderNodeRandomRange_hkree"]
default_input_values = [0, Vector3(1, 1, 1), 1, -1.0, 2, 1.0]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_mu7i8"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_kvhfv"]
op_type = 0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_l014h"]
output_port_for_preview = 0
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(0, 0, 0)]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ag3ia"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_jcves"]
output_port_for_preview = 0
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(0, 0, 0)]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_dmdmy"]
output_port_for_preview = 0
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_mr31r"]
output_port_for_preview = 0
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(0, 0, 0)]
operator = 1

[sub_resource type="CanvasTexture" id="CanvasTexture_w8c0m"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_bt662"]
output_port_for_preview = 0
source = 1
texture = SubResource("CanvasTexture_w8c0m")

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ii5aq"]
size = Vector2(525.257, 155.698)
expression = "float aspect_ratio = screen_pixel_size.y/screen_pixel_size.x;
scaled_uv = vec2(uv.x, (uv.y - 0.5) / aspect_ratio + 0.5);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_vjhbw"]
input_name = "screen_pixel_size"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_8j126"]
default_input_values = [0, 0.0, 1, 2.0]
operator = 4

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_k0y61"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 2.0]
operator = 3

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_mwe08"]
parameter_name = "Speed"
hint = 1
min = 0.1
max = 5.0
default_value_enabled = true
default_value = 2.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7cgxj"]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_y5axg"]
parameter_name = "Center"
default_value_enabled = true
default_value = Vector2(0.5, 0.5)

[sub_resource type="VisualShaderNodeVectorDistance" id="VisualShaderNodeVectorDistance_defn2"]
default_input_values = [0, Vector2(0.5, 1), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_xi220"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 0.0, 2, 0.01, 3, Vector3(1, 1, 1), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[resource]
code = "shader_type canvas_item;
uniform float Width : hint_range(0.00999999977648, 0.20000000298023) = 0.05000000074506;
uniform float Speed : hint_range(0.10000000149012, 5) = 2;
uniform vec2 Center = vec2(0.500000, 0.500000);
uniform sampler2D screen_tex_frg_23 : hint_screen_texture;




// 3D Noise with friendly permission by Inigo Quilez
vec3 hash_noise_range( vec3 p ) {
	p *= mat3(vec3(127.1, 311.7, -53.7), vec3(269.5, 183.3, 77.1), vec3(-301.7, 27.3, 215.3));
	return 2.0 * fract(fract(p)*4375.55) -1.;
}


void fragment() {
// RandomRange:10
	vec3 n_in10p0 = vec3(1.00000, 1.00000, 1.00000);
	float n_in10p1 = -1.00000;
	float n_in10p2 = 1.00000;
	float n_out10p0 = mix(n_in10p1, n_in10p2, hash_noise_range(n_in10p0).x);


// FloatParameter:11
	float n_out11p0 = Width;


// FloatOp:12
	float n_out12p0 = n_out10p0 * n_out11p0;


// RandomRange:16
	vec3 n_in16p0 = vec3(1.00000, 1.00000, 1.00000);
	float n_in16p1 = -1.00000;
	float n_in16p2 = 1.00000;
	float n_out16p0 = mix(n_in16p1, n_in16p2, hash_noise_range(n_in16p0).x);


// FloatOp:15
	float n_out15p0 = n_out11p0 * n_out16p0;


// VectorCompose:18
	vec2 n_out18p0 = vec2(n_out12p0, n_out15p0);


// Input:14
	vec2 n_out14p0 = UV;


// VectorOp:17
	vec2 n_out17p0 = n_out18p0 + n_out14p0;


// Input:2
	float n_out2p0 = TIME;


// FloatParameter:5
	float n_out5p0 = Speed;


// FloatOp:3
	float n_out3p0 = mod(n_out2p0, n_out5p0);


// FloatOp:4
	float n_out4p0 = n_out3p0 / n_out5p0;


// Input:6
	vec2 n_out6p0 = UV;


// Input:25
	vec2 n_out25p0 = SCREEN_PIXEL_SIZE;


	vec2 n_out24p0;
// Expression:24
	n_out24p0 = vec2(0.0, 0.0);
	{
		float aspect_ratio = n_out25p0.y/n_out25p0.x;
		n_out24p0 = vec2(n_out6p0.x, (n_out6p0.y - 0.5) / aspect_ratio + 0.5);
	}


// Vector2Parameter:7
	vec2 n_out7p0 = Center;


// Distance:8
	float n_out8p0 = distance(n_out24p0, n_out7p0);


	vec3 n_out9p0;
// If:9
	vec3 n_in9p3 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_in9p4 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in9p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out4p0 - n_out8p0) < n_out11p0)
	{
		n_out9p0 = n_in9p3;
	}
	else if(n_out4p0 < n_out8p0)
	{
		n_out9p0 = n_in9p5;
	}
	else
	{
		n_out9p0 = n_in9p4;
	}


// VectorOp:20
	vec3 n_out20p0 = vec3(n_out17p0, 0.0) * n_out9p0;


// VectorOp:22
	vec3 n_in22p0 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out22p0 = n_in22p0 - n_out9p0;


// VectorOp:19
	vec3 n_out19p0 = vec3(n_out14p0, 0.0) * n_out22p0;


// VectorOp:21
	vec3 n_out21p0 = n_out20p0 + n_out19p0;


	vec4 n_out23p0;
// Texture2D:23
	n_out23p0 = texture(screen_tex_frg_23, vec2(n_out21p0.xy));


// Output:0
	COLOR.rgb = vec3(n_out23p0.xyz);


}
"
graph_offset = Vector2(-380.293, -538.686)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1220, -120)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_ag3ia")
nodes/fragment/2/position = Vector2(-220, 20)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatOp_8j126")
nodes/fragment/3/position = Vector2(20, 40)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatOp_k0y61")
nodes/fragment/4/position = Vector2(140, 80)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_mwe08")
nodes/fragment/5/position = Vector2(-220, 120)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_7cgxj")
nodes/fragment/6/position = Vector2(-720, 340)
nodes/fragment/7/node = SubResource("VisualShaderNodeVec2Parameter_y5axg")
nodes/fragment/7/position = Vector2(-100, 520)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorDistance_defn2")
nodes/fragment/8/position = Vector2(160, 340)
nodes/fragment/9/node = SubResource("VisualShaderNodeIf_xi220")
nodes/fragment/9/position = Vector2(360, -20)
nodes/fragment/10/node = SubResource("VisualShaderNodeRandomRange_vp0qo")
nodes/fragment/10/position = Vector2(-140, -420)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatParameter_2nttx")
nodes/fragment/11/position = Vector2(-420, -280)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatOp_svfty")
nodes/fragment/12/position = Vector2(40, -400)
nodes/fragment/14/node = SubResource("VisualShaderNodeInput_87ceb")
nodes/fragment/14/position = Vector2(100, -200)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatOp_mw8qi")
nodes/fragment/15/position = Vector2(40, -300)
nodes/fragment/16/node = SubResource("VisualShaderNodeRandomRange_hkree")
nodes/fragment/16/position = Vector2(-120, -240)
nodes/fragment/17/node = SubResource("VisualShaderNodeVectorOp_mu7i8")
nodes/fragment/17/position = Vector2(360, -360)
nodes/fragment/18/node = SubResource("VisualShaderNodeVectorCompose_kvhfv")
nodes/fragment/18/position = Vector2(180, -360)
nodes/fragment/19/node = SubResource("VisualShaderNodeVectorOp_l014h")
nodes/fragment/19/position = Vector2(660, -60)
nodes/fragment/20/node = SubResource("VisualShaderNodeVectorOp_jcves")
nodes/fragment/20/position = Vector2(540, -320)
nodes/fragment/21/node = SubResource("VisualShaderNodeVectorOp_dmdmy")
nodes/fragment/21/position = Vector2(800, -240)
nodes/fragment/22/node = SubResource("VisualShaderNodeVectorOp_mr31r")
nodes/fragment/22/position = Vector2(500, 20)
nodes/fragment/23/node = SubResource("VisualShaderNodeTexture_bt662")
nodes/fragment/23/position = Vector2(1000, 40)
nodes/fragment/24/node = SubResource("VisualShaderNodeExpression_ii5aq")
nodes/fragment/24/position = Vector2(-440, 340)
nodes/fragment/24/size = Vector2(525.257, 155.698)
nodes/fragment/24/input_ports = "0,3,uv;1,3,screen_pixel_size;"
nodes/fragment/24/output_ports = "0,3,scaled_uv;"
nodes/fragment/24/expression = "float aspect_ratio = screen_pixel_size.y/screen_pixel_size.x;
scaled_uv = vec2(uv.x, (uv.y - 0.5) / aspect_ratio + 0.5);"
nodes/fragment/25/node = SubResource("VisualShaderNodeInput_vjhbw")
nodes/fragment/25/position = Vector2(-720, 400)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 4, 0, 5, 0, 3, 1, 5, 0, 4, 1, 4, 0, 9, 0, 8, 0, 9, 1, 10, 0, 12, 0, 16, 0, 15, 1, 11, 0, 15, 0, 11, 0, 12, 1, 12, 0, 18, 0, 15, 0, 18, 1, 18, 0, 17, 0, 11, 0, 9, 2, 17, 0, 20, 0, 9, 0, 20, 1, 20, 0, 21, 0, 19, 0, 21, 1, 9, 0, 22, 1, 22, 0, 19, 1, 14, 0, 17, 1, 14, 0, 19, 0, 23, 0, 0, 0, 21, 0, 23, 0, 6, 0, 24, 0, 25, 0, 24, 1, 7, 0, 8, 1, 24, 0, 8, 0)
