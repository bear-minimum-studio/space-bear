on:
  push:
    tags:
      - 'v*'

jobs:
  # job id, can be anything
  export_game:
    # Always use ubuntu-latest for this action
    runs-on: ubuntu-latest
    # Job name, can be anything
    name: Export Game Job
    steps:
      # Always include the checkout step so that
      # your project is available for Godot to export
    - name: checkout
      uses: actions/checkout@v2.3.1
      # Ensure that you get the entire project history
      with:
        fetch-depth: 0

    - name: export game
      # Use latest version (see releases for all versions)
      uses: firebelley/godot-export@v4.7.0
      with:
        # Defining all the required inputs
        # I used the mono version of Godot in this example
        godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/4.0/Godot_v4.0-stable_linux.x86_64.zip
        godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/4.0/Godot_v4.0-stable_export_templates.tpz
        relative_project_path: ./
        use_godot_4: true
        archive_output: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # For web builds
    - name: Add coi-service-worker
      run: |
        git clone https://github.com/gzuidhof/coi-serviceworker.git
        mv coi-serviceworker/coi-serviceworker.js /home/runner/.local/share/godot/builds/Web/coi-serviceworker.js

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ../../../.local/share/godot/builds/Web

    - name: create release
      uses: ncipollo/release-action@v1.12.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
        tag: ${{ github.ref_name }}
        artifacts: /home/runner/.local/share/godot/builds/*.zip
